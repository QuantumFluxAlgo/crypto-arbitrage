import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPubSub;

/**
 * Redis client subscriber that listens to the {@code spread-feed} channel.
 * The client runs in its own thread and reconnects automatically on failure.
 */
public class RedisClient extends Thread {
    private static final Logger logger = LoggerFactory.getLogger(RedisClient.class);

    /** Callback interface for incoming messages. */
    public interface MessageHandler {
        void onMessage(String channel, String message);
    }

    private final String host;
    private final int port;
    private final MessageHandler handler;
    private volatile boolean running = true;

    public RedisClient(String host, int port, MessageHandler handler) {
        this.host = host;
        this.port = port;
        this.handler = handler;
        setName("RedisClientSubscriber");
    }

    /** Stop the subscriber thread. */
    public void shutdown() {
        running = false;
        interrupt();
    }

    @Override
    public void run() {
        while (running) {
            try (Jedis jedis = new Jedis(host, port)) {
                jedis.subscribe(new JedisPubSub() {
                    @Override
                    public void onMessage(String channel, String message) {
                        if (handler != null) {
                            handler.onMessage(channel, message);
                        }
                    }
                }, "spread-feed");
            } catch (Exception e) {
                if (running) {
                    logger.error("Redis subscriber error, reconnecting", e);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ie) {
                        Thread.currentThread().interrupt();
                    }
                }
            }
        }
    }
}
