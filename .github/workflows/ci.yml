name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install kubectl and jq
        run: |
          sudo apt-get update
          sudo apt-get -y install kubectl jq
      - name: Install kubeconform
        run: |
          curl -L https://github.com/yannh/kubeconform/releases/download/v0.7.0/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin/
      - name: Validate Kubernetes YAML
        run: kubeconform -strict -ignore-missing-schemas -summary infra/k8s/
      - name: Dry-run apply manifests
        run: kubectl apply --dry-run=client -f infra/k8s/

  api:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('api/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: api
      - name: Run API tests
        run: |
          mkdir -p ../test-results
          npm test -- --json --outputFile=../test-results/api-jest.json
        working-directory: api
      - name: Upload API test report
        uses: actions/upload-artifact@v3
        with:
          name: api-jest-report
          path: test-results/api-jest.json
      - name: Run API ESLint
        run: npx eslint .
        working-directory: api
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Build api image
        run: podman build -t api ./api
      - name: Run Trivy scan on api
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: api
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1

  dashboard:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('dashboard/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: dashboard
      - name: Run Dashboard tests
        run: |
          mkdir -p ../test-results
          npx jest --json --outputFile=../test-results/dashboard-jest.json
        working-directory: dashboard
      - name: Upload Dashboard test report
        uses: actions/upload-artifact@v3
        with:
          name: dashboard-jest-report
          path: test-results/dashboard-jest.json
      - name: Run Dashboard ESLint
        run: npx eslint .
        working-directory: dashboard
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Build dashboard image
        run: podman build -t dashboard ./dashboard
      - name: Run Trivy scan on dashboard
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: dashboard
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1

  feed-aggregator:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/pip
          key: ${{ runner.os }}-fa-${{ hashFiles('feed-aggregator/package-lock.json') }}-${{ hashFiles('requirements.txt') }}
      - name: Install dependencies
        run: npm ci
        working-directory: feed-aggregator
      - name: Run feed-aggregator tests
        run: |
          mkdir -p ../test-results
          pytest --junitxml=../test-results/feed-aggregator-pytest.xml
        working-directory: feed-aggregator
      - name: Upload feed-aggregator test report
        uses: actions/upload-artifact@v3
        with:
          name: feed-aggregator-pytest-report
          path: test-results/feed-aggregator-pytest.xml
      - name: Run feed-aggregator ESLint
        run: npx eslint .
        working-directory: feed-aggregator
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Build feed-aggregator image
        run: podman build -t feed-aggregator ./feed-aggregator
      - name: Run Trivy scan on feed-aggregator
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: feed-aggregator
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1

  analytics:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Run Analytics tests
        run: |
          mkdir -p ../test-results
          pytest --junitxml=../test-results/analytics-pytest.xml
        working-directory: analytics
      - name: Upload analytics test report
        uses: actions/upload-artifact@v3
        with:
          name: analytics-pytest-report
          path: test-results/analytics-pytest.xml
      - name: Run flake8
        run: flake8 analytics/
      - name: Build analytics image
        run: podman build -t analytics ./analytics
      - name: Test analytics container
        run: podman run --rm analytics python --version
      - name: Run Trivy scan on analytics
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: analytics
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1

  executor:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('executor/*.gradle*') }}
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get -y install podman
      - name: Run Executor tests
        run: |
          mkdir -p ../test-results/executor
          ./gradlew test
          cp -r build/test-results/test ../test-results/executor || true
        working-directory: executor
      - name: Upload Executor test report
        uses: actions/upload-artifact@v3
        with:
          name: executor-gradle-report
          path: test-results/executor
      - name: Build executor image
        run: podman build -t executor ./executor
      - name: Test executor container
        run: podman run --rm executor java -version
      - name: Run Trivy scan on executor
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: executor
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1

  behavior-tests:
    needs:
      - api
      - dashboard
      - feed-aggregator
      - analytics
      - executor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install kubectl and jq
        run: |
          sudo apt-get update
          sudo apt-get -y install kubectl jq
      - name: Run behavior simulation tests
        run: bash scripts/test-behavior.sh

  live-server-tests:
    needs: behavior-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && secrets.XEON_HOST != ''
    steps:
      - name: Run live tests on Xeon server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.XEON_HOST }}
          username: ${{ secrets.XEON_USER }}
          key: ${{ secrets.XEON_SSH_KEY }}
          script: |
            set -euo pipefail
            cd /opt/prism-arbitrage
            git pull |& sed 's/^/[test:live] /'
            ./test/run-live.sh |& sed 's/^/[test:live] /'
